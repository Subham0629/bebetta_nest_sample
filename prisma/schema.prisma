// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  game
  bids
  rewards
}

enum CurrencyType {
  coin
  key
}

model tbl_currencies {
  id           Int                      @id @default(autoincrement())
  type         CurrencyType
  name         String
  display_name String
  is_active    Boolean                  @default(true)
  created_at   DateTime                 @default(now())
  updated_at   DateTime                 @updatedAt

  // Relation field to refer to InAppStoreProduct
  products    tbl_inapp_store_products[]
  variants    tbl_currency_variants[]
  purchase_orders   tbl_inapp_product_purchase_orders[]

  // Relation field to refer to FTUE
  milestones   tbl_ftue_journey_milestones[]
}

model tbl_inapp_store_products {
  id                 Int                @id @default(autoincrement())
  name               String
  category           Category
  display_name       String?
  description        String?
  info_details_html  String?
  exchange_currency_id Int
  is_active          Boolean            @default(true)
  created_at         DateTime           @default(now())
  updated_at         DateTime           @updatedAt

  exchangeCurrency   tbl_currencies     @relation(fields: [exchange_currency_id], references: [id])
  productVariants  tbl_inapp_store_product_variant[]
  purchase_orders   tbl_inapp_product_purchase_orders[]
}
model tbl_currency_variants {
  id             Int      @id @default(autoincrement())
  currency_id    Int
  variant        String
  exchange_rate  Int?
  is_active      Boolean  @default(true)
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now()) @updatedAt

  currency       tbl_currencies @relation(fields: [currency_id], references: [id])

  @@index([currency_id])
}

model tbl_inapp_store_product_variant {
  id                     Int                   @id @default(autoincrement())
  inapp_store_product_id Int
  display_name           String
  description            String
  price_units            Int
  icon_url               String
  is_active              Boolean               @default(true)
  created_at             DateTime              @default(now())
  updated_at             DateTime              @default(now()) @updatedAt

  inappStoreProduct      tbl_inapp_store_products @relation(fields: [inapp_store_product_id], references: [id])
  purchase_orders   tbl_inapp_product_purchase_orders[]

  @@map("tbl_inapp_store_product_variant")
}
model tbl_inapp_product_purchase_orders {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  variant_id Int
  price_units Int
  currency_id Int
  details    String?
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  // Relations
  product    tbl_inapp_store_products   @relation(fields: [product_id], references: [id])
  variant    tbl_inapp_store_product_variant @relation(fields: [variant_id], references: [id])
  currency   tbl_currencies  @relation(fields: [currency_id], references: [id])
  redemptions  tbl_inapp_product_purchase_redemption[]

  @@map("tbl_inapp_product_purchase_orders")
}

model tbl_inapp_product_purchase_redemption {
  id          Int      @id @default(autoincrement())
  order_id    Int
  activate_at DateTime?
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  // Relation
  order tbl_inapp_product_purchase_orders @relation(fields: [order_id], references: [id])

  @@map("tbl_inapp_product_purchase_redemption")
}

enum SupportedBebettaConfig {
  string
  timestamp
  integer
  float
  object
}

model tbl_bebetta_global_config {
  id                Int                   @id @default(autoincrement())
  bucket            String?
  property_name     String?
  property_value    String?
  property_data_type SupportedBebettaConfig
  is_active         Boolean               @default(true)
  created_at        DateTime              @default(now())
  updated_at        DateTime              @updatedAt
}

model tbl_ftue_category {
  id          Int      @id @default(autoincrement())
  type        String
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  milestones   tbl_ftue_journey_milestones[]
}

model tbl_ftue_journeys {
  id          Int      @id @default(autoincrement())
  expiry_time String
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  milestones  tbl_ftue_journey_milestones[]
  user_journey_milestones tbl_ftue_user_journey_milestones[]
}

model tbl_ftue_journey_milestones {
  id             Int      @id @default(autoincrement())
  journey_id     Int
  category_id    Int
  name           String
  display_name   String
  level          Int
  is_active      Boolean  @default(true)
  reward_currency Int
  reward_units   Int
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now()) @updatedAt

  journey     tbl_ftue_journeys @relation(fields: [journey_id], references: [id])
  category    tbl_ftue_category @relation(fields: [category_id], references: [id])
  currency    tbl_currencies    @relation(fields: [reward_currency], references: [id])
}

model tbl_ftue_user_journey_milestones {
  id                           Int          @id @default(autoincrement())
  user_id                      Int
  journey_id                   Int
  last_completed_milestone_level Int       @default(0)
  rewards_collected            Int          @default(0)
  is_active                    Boolean      @default(true)
  created_at                   DateTime     @default(now())
  updated_at                   DateTime     @default(now()) @updatedAt

  journey                      tbl_ftue_journeys @relation(fields: [journey_id], references: [id])
}

model tbl_lotto_products {
  id                 Int      @id @default(autoincrement())
  name               String
  display_name       String
  description        String
  info_details_html  String
  is_active          Boolean?  @default(true)
  created_at         DateTime @default(now())
  updated_at         DateTime @default(now()) @updatedAt

  // Relations
  variants           tbl_lotto_variants[]
  prize_variants     tbl_lotto_prize_variants[]
  purchase_orders    tbl_lotto_purchase_orders[]

  @@map("tbl_lotto_products")
}

model tbl_lotto_variants {
  id                       Int                @id @default(autoincrement())
  product_id               Int
  display_name             String
  description              String
  real_money_price          Int
  coin_price                Int
  icon_url                 String
  bet_coin_purchase_limit  Int
  passes_limit             Int
  is_active                Boolean?            @default(true)
  created_at               DateTime           @default(now())
  updated_at               DateTime           @default(now()) @updatedAt

  // Relations
  product                  tbl_lotto_products @relation(fields: [product_id], references: [id])
  prize_variants            tbl_lotto_prize_variants[]
  purchase_orders           tbl_lotto_purchase_orders[]

  @@map("tbl_lotto_variants")
}

model tbl_lotto_prize_variants {
  id            Int                 @id @default(autoincrement())
  product_id    Int
  variant_id    Int
  rank          String
  display_name  String
  description   String
  image_url     String
  is_active     Boolean             @default(true)
  created_at    DateTime            @default(now())
  updated_at    DateTime            @default(now()) @updatedAt

  product       tbl_lotto_products  @relation(fields: [product_id], references: [id])
  variant       tbl_lotto_variants  @relation(fields: [variant_id], references: [id])

  @@map("tbl_lotto_prize_variants")
}

enum currency {
  coin
  money
}

model tbl_lotto_purchase_orders {
  id                 Int                     @id @default(autoincrement())
  user_id            Int
  product_id         Int
  variant_id         Int
  price_units        Int
  purchase_currency  currency
  win_rank           Int?                      @default(0)
  is_active          Boolean?                 @default(true)
  pass_number        Int
  created_at         DateTime                @default(now())
  updated_at         DateTime                @default(now()) @updatedAt

  product            tbl_lotto_products      @relation(fields: [product_id], references: [id])
  variant            tbl_lotto_variants      @relation(fields: [variant_id], references: [id])

  @@map("tbl_lotto_purchase_orders")
}


